name: "Publish Images"

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  YQ_VERSION: v4.44.3

jobs:
  helm-locker-ci:
    uses: ./.github/workflows/hl-ci.yaml
  helm-project-operator-ci:
    uses: ./.github/workflows/hpo-ci.yaml
    with:
      skip_build: 'true'
  goreleaser:
    name: Build go binaries and helm chart
    runs-on : ubuntu-latest
    needs: [
      helm-locker-ci,
      helm-project-operator-ci,
    ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - name : setup Go
        uses : actions/setup-go@v5
        with:
          go-version: 1.22
      - name: Install mikefarah/yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq;
      - name : Install helm
        run : |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm version
      - name: Package release helm charts
        run: make package-helm
      - run: mkdir -p ./build/artifacts/ && mv -v ./dist/artifacts/ ./build/
      - name: Prepare embedded helm chart
        run: make build-chart
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
  push:
    needs: [
      helm-locker-ci,
      helm-project-operator-ci,
    ]
    name : Build and push helm-locker & Helm-Project-Operator images
    runs-on : ubuntu-latest
    env:
      TAG: ${{ needs.prebuild-env.outputs.branch_static_tag }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name : Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for helm-locker image
        id: meta-locker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/helm-locker
      - name: Build and push helm-locker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./package/Dockerfile-helm-locker
          push: true
          tags: ${{ steps.meta-locker.outputs.tags }}
          labels: ${{ steps.meta-locker.outputs.labels }}
          platforms : linux/amd64,linux/arm64
      - name: Extract metadata (tags, labels) for Helm-Project-Operator image
        id: meta-hpo
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Helm-Project-Operator image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./package/Dockerfile-helm-project-operator
          push: true
          tags: ${{ steps.meta-hpo.outputs.tags }}
          labels: ${{ steps.meta-hpo.outputs.labels }}
          platforms: linux/amd64,linux/arm64